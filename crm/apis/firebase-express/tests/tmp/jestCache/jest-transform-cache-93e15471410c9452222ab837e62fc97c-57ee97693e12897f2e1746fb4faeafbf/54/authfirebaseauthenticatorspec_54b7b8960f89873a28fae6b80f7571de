52e046cd8058f11c7b652d13da8f0337
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var import_auth_firebase = __toESM(require("../../../src/auth/application/auth-firebase.authenticator"));
var import_mock_access_token = __toESM(require("../__mock__/mock.access-token.generator"));
var import_mock_auth = __toESM(require("../__mock__/mock.auth.repository"));
describe("AuthFirebaseAuthenticator", () => {
  let service;
  let authRepository;
  let accessTokenGenerator;
  beforeEach(() => {
    authRepository = new import_mock_auth.default();
    service = new import_auth_firebase.default(authRepository, accessTokenGenerator);
    accessTokenGenerator = new import_mock_access_token.default();
  });
  it("should call save method", async () => {
    const token = "random_token";
    const jwt = await service.run(token);
    expect(jwt).toBeDefined();
  });
});
